{"ast":null,"code":"import { USER_LOGIN_FAIL, USER_LOGIN_SUCCESS, USER_LOGOUT, USER_LOGIN_REQUEST, USER_REGISTER_FAIL, USER_REGISTER_SUCCESS, USER_REGISTER_REQUEST } from '../constants/userConstants';\nimport axios from 'axios';\nexport const login = (email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/users/login/', {\n      'username': email,\n      'password': password\n    }, config);\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\nexport const register = (name, email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/users/register/', {\n      'name': name,\n      'email': email,\n      'password': password\n    }, config);\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\nexport const logout = () => dispatch => {\n  localStorage.removeItem('userInfo');\n  dispatch({\n    type: USER_LOGOUT\n  });\n};","map":{"version":3,"sources":["C:/Users/Nikhil Rai/Desktop/task/react/Django-react/arkfrontend/src/actions/userActions.js"],"names":["USER_LOGIN_FAIL","USER_LOGIN_SUCCESS","USER_LOGOUT","USER_LOGIN_REQUEST","USER_REGISTER_FAIL","USER_REGISTER_SUCCESS","USER_REGISTER_REQUEST","axios","login","email","password","dispatch","type","config","headers","data","post","payload","localStorage","setItem","JSON","stringify","error","response","detail","message","register","name","logout","removeItem"],"mappings":"AAAA,SAASA,eAAT,EAAyBC,kBAAzB,EAA4CC,WAA5C,EAAwDC,kBAAxD,EAA2EC,kBAA3E,EAA8FC,qBAA9F,EAAoHC,qBAApH,QAAkJ,4BAAlJ;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,KAAK,GAAG,CAACC,KAAD,EAAOC,QAAP,KAAmB,MAAMC,QAAN,IAAiB;AAEtD,MAAG;AACCA,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAACT;AADA,KAAD,CAAR;AAIA,UAAMU,MAAM,GAAE;AACVC,MAAAA,OAAO,EAAC;AACJ,wBAAe;AADX;AADE,KAAd;AAMA,UAAM;AAACC,MAAAA;AAAD,QAAQ,MAAMR,KAAK,CAACS,IAAN,CAAW,mBAAX,EAEpB;AAAC,kBAAWP,KAAZ;AAAkB,kBAAWC;AAA7B,KAFoB,EAEmBG,MAFnB,CAApB;AAOAF,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAACX,kBADA;AAELgB,MAAAA,OAAO,EAACF;AAFH,KAAD,CAAR;AAKAG,IAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAgCC,IAAI,CAACC,SAAL,CAAeN,IAAf,CAAhC;AAIH,GA3BD,CA6BA,OAAMO,KAAN,EAAY;AACXX,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEZ,eADD;AAELiB,MAAAA,OAAO,EACLK,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeR,IAAf,CAAoBS,MAAtC,GACIF,KAAK,CAACC,QAAN,CAAeR,IAAf,CAAoBS,MADxB,GAEIF,KAAK,CAACG;AALP,KAAD,CAAR;AAOA;AAEH,CAzCM;AA4CP,OAAO,MAAMC,QAAQ,GAAE,CAACC,IAAD,EAAMlB,KAAN,EAAYC,QAAZ,KAAwB,MAAMC,QAAN,IAAiB;AAC5D,MAAG;AAEAA,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAACN;AADA,KAAD,CAAR;AAIA,UAAMO,MAAM,GAAG;AACXC,MAAAA,OAAO,EAAC;AACJ,wBAAe;AADX;AADG,KAAf;AAMA,UAAM;AAACC,MAAAA;AAAD,QAAQ,MAAMR,KAAK,CAACS,IAAN,CAAW,sBAAX,EAGpB;AAAC,cAAOW,IAAR;AAAa,eAAQlB,KAArB;AAA2B,kBAAWC;AAAtC,KAHoB,EAG6BG,MAH7B,CAApB;AAKAF,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAACP,qBADA;AAELY,MAAAA,OAAO,EAACF;AAFH,KAAD,CAAR;AAIAJ,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAACX,kBADA;AAELgB,MAAAA,OAAO,EAACF;AAFH,KAAD,CAAR;AAKAG,IAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAgCC,IAAI,CAACC,SAAL,CAAeN,IAAf,CAAhC;AAEF,GA5BD,CA6BA,OAAMO,KAAN,EAAY;AAETX,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAACR,kBADA;AAELa,MAAAA,OAAO,EAACK,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeR,IAAf,CAAoBS,MAAtC,GACNF,KAAK,CAACC,QAAN,CAAeR,IAAf,CAAoBS,MADd,GAEPF,KAAK,CAACG;AAJF,KAAD,CAAR;AAOF;AACJ,CAxCM;AAkDP,OAAO,MAAMG,MAAM,GAAG,MAAOjB,QAAD,IAAc;AACtCO,EAAAA,YAAY,CAACW,UAAb,CAAwB,UAAxB;AACAlB,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEV;AAAR,GAAD,CAAR;AAEH,CAJM","sourcesContent":["import { USER_LOGIN_FAIL,USER_LOGIN_SUCCESS,USER_LOGOUT,USER_LOGIN_REQUEST,USER_REGISTER_FAIL,USER_REGISTER_SUCCESS,USER_REGISTER_REQUEST, } from '../constants/userConstants'\r\nimport axios from 'axios'\r\n\r\nexport const login = (email,password)=> async(dispatch)=>{\r\n\r\n   try{\r\n       dispatch({\r\n           type:USER_LOGIN_REQUEST\r\n       })\r\n\r\n       const config ={\r\n           headers:{\r\n               'Content-type':'application/json'\r\n           }\r\n       }\r\n\r\n       const {data}= await axios.post('/api/users/login/',\r\n       \r\n       {'username':email,'password':password},config\r\n       \r\n       \r\n       )\r\n\r\n       dispatch({\r\n           type:USER_LOGIN_SUCCESS,\r\n           payload:data\r\n       })\r\n\r\n       localStorage.setItem('userInfo',JSON.stringify(data))\r\n\r\n\r\n\r\n   }\r\n\r\n   catch(error){\r\n    dispatch({\r\n        type: USER_LOGIN_FAIL,\r\n        payload:\r\n          error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n      });\r\n   }\r\n\r\n}\r\n\r\n\r\nexport const register =(name,email,password)=> async(dispatch)=>{\r\n    try{\r\n\r\n       dispatch({\r\n           type:USER_REGISTER_REQUEST\r\n       })\r\n\r\n       const config = {\r\n           headers:{\r\n               'Content-type':'application/json'\r\n           }\r\n       }\r\n\r\n       const {data}= await axios.post('/api/users/register/',\r\n       \r\n       \r\n       {'name':name,'email':email,'password':password },config )\r\n\r\n       dispatch({\r\n           type:USER_REGISTER_SUCCESS,\r\n           payload:data\r\n       })\r\n       dispatch({\r\n           type:USER_LOGIN_SUCCESS,\r\n           payload:data\r\n       })\r\n\r\n       localStorage.setItem('userInfo',JSON.stringify(data))\r\n\r\n    }\r\n    catch(error){\r\n\r\n       dispatch({\r\n           type:USER_REGISTER_FAIL,\r\n           payload:error.response && error.response.data.detail\r\n           ? error.response.data.detail\r\n           :error.message,\r\n       })\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const logout = () => (dispatch) => {\r\n    localStorage.removeItem('userInfo')\r\n    dispatch({ type: USER_LOGOUT })\r\n \r\n}"]},"metadata":{},"sourceType":"module"}