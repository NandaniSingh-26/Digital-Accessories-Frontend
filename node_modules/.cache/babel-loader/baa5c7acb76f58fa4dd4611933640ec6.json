{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nikhil Rai\\\\Desktop\\\\task\\\\react\\\\Django-react\\\\arkfrontend\\\\src\\\\components\\\\screens\\\\RegisterScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport Message from \"../Message\";\nimport Loader from \"../Loader\";\nimport { Row, Col, Form, Button, Card } from 'react-bootstrap';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { register } from '../../actions/userActions';\nimport FormContainer from '../FormContainer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction RegisterScreen({\n  location,\n  history\n}) {\n  _s();\n\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const dispatch = useDispatch();\n  const redirect = location.search ? location.search.split('=')[1] : '/';\n  const userRegister = useSelector(state => state.userRegister);\n  const {\n    error,\n    loading,\n    userInfo\n  } = userRegister;\n  useEffect(() => {\n    if (userInfo) {\n      history.push(redirect);\n    }\n  }, [history, userInfo, redirect]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n\n    if (password != confirmPassword) {\n      setMessage('Password do not Match');\n    } else {\n      dispatch(register(name, email, password));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(FormContainer, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), message && /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 23\n      }, this), error && /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this), loading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: submitHandler,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"name\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"name\",\n            placeholder: \"Enter Name\",\n            value: name,\n            onChange: e => setName(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"email\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Email Address \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            required: true,\n            type: \"email\",\n            placeholder: \"Enter Email\",\n            value: email,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"password\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            required: true,\n            type: \"password\",\n            placeholder: \"Enter Password\",\n            value: password,\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"password\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Confirm Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            required: true,\n            type: \"password\",\n            placeholder: \"Confirm Password\",\n            value: confirmPassword,\n            onChange: e => setConfirmPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"mt-3\",\n          type: \"submit\",\n          variant: \"success\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"py-3\",\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: [\"Already User?\", /*#__PURE__*/_jsxDEV(Link, {\n            to: redirect ? `/login?redirect=${redirect}` : '/login',\n            children: \"Sign In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 14\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n}\n\n_s(RegisterScreen, \"4FsyKN5rGUQtUudBI3vOoAs49lM=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = RegisterScreen;\nexport default RegisterScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterScreen\");","map":{"version":3,"sources":["C:/Users/Nikhil Rai/Desktop/task/react/Django-react/arkfrontend/src/components/screens/RegisterScreen.js"],"names":["React","useState","useEffect","Link","Message","Loader","Row","Col","Form","Button","Card","useDispatch","useSelector","register","FormContainer","RegisterScreen","location","history","name","setName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","message","setMessage","dispatch","redirect","search","split","userRegister","state","error","loading","userInfo","push","submitHandler","e","preventDefault","target","value"],"mappings":"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","sourcesContent":["import React,\r\n{useState,useEffect} from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport Message from \"../Message\";\r\nimport Loader from \"../Loader\";\r\nimport { Row, Col, Form, Button, Card } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { register } from '../../actions/userActions'\r\nimport FormContainer from '../FormContainer'\r\n\r\n\r\n\r\nfunction RegisterScreen({location,history}) {\r\n    const [name,setName]=useState('')\r\n    const [email,setEmail]=useState('')\r\n    const [password,setPassword]=useState('')\r\n    const [confirmPassword,setConfirmPassword]=useState('')\r\n    const [message,setMessage]=useState('')\r\n    const dispatch = useDispatch()\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] :'/'\r\n \r\n    const userRegister = useSelector(state=>state.userRegister)\r\n    const {error,loading,userInfo}=userRegister\r\n\r\n    useEffect(()=>{\r\n        if(userInfo){\r\n            history.push(redirect)\r\n        }\r\n    },[history,userInfo,redirect])\r\n\r\n\r\n    const submitHandler= (e)=>{\r\n        e.preventDefault()\r\n        if(password!=confirmPassword){\r\n            setMessage('Password do not Match')\r\n        }\r\n        else{\r\n            dispatch(register(name,email,password))\r\n\r\n        }\r\n       \r\n    }\r\n    return (\r\n        <div>\r\n             <FormContainer>\r\n          <h1>Sign Up</h1>\r\n          {message && <Message variant='danger'>{message}</Message>}\r\n          {error && <Message variant='danger'>{error}</Message>}\r\n          {loading && <Loader />}\r\n\r\n          <Form onSubmit={submitHandler}>\r\n\r\n\r\n              <Form.Group controlId='name'>\r\n                <Form.Label>Name</Form.Label>\r\n                <Form.Control type='name' placeholder='Enter Name' value={name} onChange={(e)=> setName(e.target.value)} required></Form.Control>\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId='email'>\r\n                <Form.Label>Email Address </Form.Label>\r\n                <Form.Control required type='email' placeholder='Enter Email' value={email} onChange={(e)=> setEmail(e.target.value)}></Form.Control>\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId='password'>\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control required type='password' placeholder='Enter Password' value={password} onChange={(e)=> setPassword(e.target.value)}></Form.Control>\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId='password'>\r\n                <Form.Label>Confirm Password</Form.Label>\r\n                <Form.Control required type='password' placeholder='Confirm Password' value={confirmPassword} onChange={(e)=> setConfirmPassword(e.target.value)}></Form.Control>\r\n              </Form.Group>\r\n\r\n            <Button className='mt-3' type='submit' variant='success'>Register</Button>\r\n\r\n          </Form>\r\n\r\n          <Row className='py-3'>\r\n              <Col>\r\n              Already User? \r\n              <Link to={redirect?`/login?redirect=${redirect}`:'/login'}>Sign In</Link>\r\n              </Col>\r\n\r\n          </Row>\r\n\r\n         </FormContainer>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RegisterScreen\r\n"]},"metadata":{},"sourceType":"module"}