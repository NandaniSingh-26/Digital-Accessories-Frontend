{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nikhil Rai\\\\Desktop\\\\task\\\\react\\\\Django-react\\\\arkfrontend\\\\src\\\\components\\\\screens\\\\LoginScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Row, Col, Image, ListGroup, Button, Card, Form } from \"react-bootstrap\";\nimport Loader from '../Loader';\nimport Message from '../Message';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { login } from \"../../actions/userActions\";\nimport FormContainer from '../FormContainer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction LoginScreen({\n  location,\n  history\n}) {\n  _s();\n\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const dispatch = useDispatch();\n  const redirect = location.search ? location.search.split('=')[1] : '/';\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    error,\n    loading,\n    userInfo\n  } = userLogin;\n  useEffect(() => {\n    if (userInfo) {\n      history.push(redirect);\n    }\n  }, [history, userInfo, redirect]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n    dispatch(login(email, password));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(FormContainer, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this), error && /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, this), loading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: submitHandler,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"email\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Email Address \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            required: true,\n            type: \"email\",\n            placeholder: \"Enter Email\",\n            value: email,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"password\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            required: true,\n            type: \"password\",\n            placeholder: \"Enter Password\",\n            value: password,\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"mt-3\",\n          type: \"submit\",\n          variant: \"primary\",\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"py-3\",\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: [\"New Customer?\", /*#__PURE__*/_jsxDEV(Link, {\n            to: redirect ? `/register?redirect=${redirect}` : '/register',\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 10\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\n\n_s(LoginScreen, \"aTfUGHzzVjmMdkWv7+vBp/tSajw=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = LoginScreen;\nexport default LoginScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginScreen\");","map":{"version":3,"sources":["C:/Users/Nikhil Rai/Desktop/task/react/Django-react/arkfrontend/src/components/screens/LoginScreen.js"],"names":["React","useState","useEffect","Link","Row","Col","Image","ListGroup","Button","Card","Form","Loader","Message","useDispatch","useSelector","login","FormContainer","LoginScreen","location","history","email","setEmail","password","setPassword","dispatch","redirect","search","split","userLogin","state","error","loading","userInfo","push","submitHandler","e","preventDefault","target","value"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Row, Col, Image, ListGroup, Button, Card,Form } from \"react-bootstrap\";\r\nimport Loader from '../Loader';\r\nimport Message from '../Message';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { login } from \"../../actions/userActions\";\r\nimport FormContainer from '../FormContainer'\r\n\r\n\r\nfunction LoginScreen({location,history}) {\r\n\r\n    const [email,setEmail]=useState('')\r\n    const [password,setPassword]=useState('')\r\n    const dispatch = useDispatch()\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] :'/'\r\n \r\n    const userLogin = useSelector(state=>state.userLogin)\r\n    const {error,loading,userInfo}=userLogin\r\n\r\n    useEffect(()=>{\r\n        if(userInfo){\r\n            history.push(redirect)\r\n        }\r\n    },[history,userInfo,redirect])\r\n\r\n\r\n    const submitHandler= (e)=>{\r\n        e.preventDefault()\r\n        dispatch(login(email,password))\r\n    }\r\n    return (\r\n        <div>\r\n         <FormContainer>\r\n          <h1>Sign In</h1>\r\n          {error && <Message variant='danger'>{error}</Message>}\r\n          {loading && <Loader />}\r\n\r\n          <Form onSubmit={submitHandler}>\r\n\r\n\r\n              <Form.Group controlId='email'>\r\n                <Form.Label>Email Address </Form.Label>\r\n                <Form.Control required type='email' placeholder='Enter Email' value={email} onChange={(e)=> setEmail(e.target.value)}></Form.Control>\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId='password'>\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control required type='password' placeholder='Enter Password' value={password} onChange={(e)=> setPassword(e.target.value)}></Form.Control>\r\n              </Form.Group>\r\n\r\n            <Button className='mt-3' type='submit' variant='primary'>Sign In</Button>\r\n\r\n          </Form>\r\n\r\n          <Row className='py-3'>\r\n              <Col>\r\n              New Customer? \r\n              <Link to={redirect?`/register?redirect=${redirect}`:'/register'}>Register</Link>\r\n              </Col>\r\n\r\n          </Row>\r\n\r\n         </FormContainer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginScreen\r\n"]},"metadata":{},"sourceType":"module"}